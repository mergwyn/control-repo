#!/bin/bash
# This file provides an easy way to add custom menu entries.  Simply type the
# menu entries you want to add after this comment.  Be careful not to change
# the 'exec tail' line above.
#menuentry 'Ubuntu (snapshot)' {
#        linux   /ROOT/bravo/@zfsroot/boot/vmlinuz-3.13.0-32-generic root=ZFS=POOL/ROOT/bravo@zfsroot ro boot=zfs
#        initrd  /ROOT/bravo/@zfsroot/boot/initrd.img-3.13.0-32-generic
#}

MNTINFO=$(mount | grep 'on / type')
[[ ${MNTINFO} = *zfs* ]] || exit 0
# we have a zfs root file system
echo "### END $0 ###" >&2

BOOTEDROOT=${MNTINFO%% *}
oIFS=$IFS
IFS=/ PARTS=( ${BOOTEDROOT} )
IFS=$oIFS
POOL=${PARTS[0]}
BEDS=${PARTS[1]}
#BE=${PARTS[2]}

MNTDIR=/tmp/grub$$
mkdir ${MNTDIR} || true

[[ -f /etc/default/grub ]] && . /etc/default/grub
DIST=${GRUB_DISTRIBUTOR:-"Linux"}

declare -i count=0

BELIST=$({
if [[ $(which beadm) ]]
then
  beadm list -H | cut -f 1 | sed "s:^:${POOL}/${BEDS}/:"
else
  zfs list -H -r -p -o name ${POOL}/${BEDS}
fi
} | tac)
for BE in $BELIST
do
  #TODO handle mounting of toplevel BE (mountpoint needs to be legacy)
  for fs in $(zfs list -H -r -p -t all -o name ${BE} | tac)
  do
    rootfs=${fs%%@*}
    be=${rootfs##*/}
    entry=
    snapname=${fs#*@}
    [[ ${snapname} != ${fs} ]] && entry=$snapname/

    mount -t zfs ${fs} ${MNTDIR} 2>/dev/null || continue
    if [[ ! -d ${MNTDIR}/boot/ ]]
    then
      umount ${MNTDIR}
      continue
    fi

    for version in $(cd ${MNTDIR}/boot; ls vmlinuz-* | grep -v old-dkms | tac)
    do
      version=$(echo $version | sed 's/^vmlinuz-//')
      if [[ -f ${MNTDIR}/boot/vmlinuz-$version && -f ${MNTDIR}/boot/initrd.img-$version ]] 
      then
	if [[ $count = 0 ]] 
	then
	  echo "# Auto generated zfs boot environment and snapshot entries"
	  echo "submenu 'ZFS boot environment and snapshot options for $DIST' {"
	fi
	count+=1
	echo "Adding kernel $version from $fs" >&2
	echo "	menuentry '$fs $version ($(zfs list -H -o creation $fs))' {"
	echo "		linux   /${BEDS}/${be}/@${entry}boot/vmlinuz-$version root=ZFS=$fs ro boot=zfs"
	echo "		initrd  /${BEDS}/${be}/@${entry}boot/initrd.img-$version"
	echo "	}"
      fi
    done
    umount ${MNTDIR}
  done
done
rmdir ${MNTDIR}

[[ $count != 0 ]] && echo "}" 

exit 0

# vim: sw=2:ai:nu 
