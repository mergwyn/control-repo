#
---

classes:
  - profile::base  # All roles should have the base profile
  - profile::ddclient
  - profile::certificate_server
  - nginx

profile::base::files::objects:
  '/var/www/html/letsencrypt/': 
    ensure: directory
    require: Package[nginx-common]
  '/var/www/html/letsencrypt/.well-known': 
    ensure: directory
    require: Package[nginx-common]
  '/var/www/html/letsencrypt/.well-known/acme-challenge/':
    ensure: directory
    require: Package[nginx-common]

letsencrypt::renew_cron_ensure: 'present'
letsencrypt::renew_cron_minute: 0
letsencrypt::renew_cron_hour: 6
letsencrypt::renew_cron_monthday: '1-31/2'
letsencrypt::config:
  email:  "ca@%{domain}"

# TODO: move this somewhere sensible or build domain array from hash
profile::certificate_server::domains:
#  - "%{trusted.domain}"
  - "%{trusted.certname}"
#  - "echo.%{trusted.domain}"
#  - "zulu.%{trusted.domain}"
#  - "foxtrot.%{trusted.domain}"
#  - "tango.%{trusted.domain}"

nginx::server_purge: true
nginx::nginx_locations:
  'well-known':
    location: '^~ /.well-known/acme-challenge/'
    www_root: '/var/www/html/letsencrypt/'
    server:
      - "%{trusted.hostname}"
    location_custom_cfg_append:
     'default_type' : '"text/plain";'

nginx::nginx_servers:
  "%{trusted.hostname}":
    server_name: [ "%{trusted.certname}" ]
    listen_port:  80
    ssl_redirect: true
    ssl_cert:     "/etc/letsencrypt/live/%{trusted.certname}/fullchain.pem"
    ssl_key:      "/etc/letsencrypt/live/%{trusted.certname}/privkey.pem"
  zulu:
    server_name: [ "zulu.%{trusted.domain}" ]
    listen_port: 80
    proxy      : "http://zulu.%{trusted.domain}:80"
  foxtrot:
    server_name: [ "foxtrot.%{trusted.domain}" ]
    listen_port: 80
    proxy      : "http://foxtrot.%{trusted.domain}:80"
  echo:
    server_name: [ "echo.%{trusted.domain}" ]
    listen_port: 80
    proxy      : "http://echo.%{trusted.domain}:80"
# tango related
  'sabnzbd.tango':
    listen_port: 8080
    server_name: [ "tango.%{trusted.domain}" ]
    proxy      : "http://tango.%{trusted.domain}:8080"
  'radarr.tango':
    listen_port: 7878
    server_name: [ "tango.%{trusted.domain}" ]
    proxy      : "http://tango.%{trusted.domain}:7878"
  'sonarr.tango':
    listen_port: 8989
    server_name: [ "tango.%{trusted.domain}" ]
    proxy      : "http://tango.%{trusted.domain}:8989"
  'transmission.tango':
    listen_port: 9091
    server_name: [ "tango.%{trusted.domain}" ]
    proxy      : "http://tango.%{trusted.domain}:9091"


#  nginx::resource::upstream { 'plex_upstream':
#    members => [ "tango.$::domain:32400", ],
#  }
#  nginx::resource::server { 'plex.tango':
#    listen_port => 32400,
#    server_name => [ "tango.$::domain" ],
#    access_log  => 'off',
#    locations   => {
#      '/web' => {
#        location            => '/web',
#        proxy               => "http://tango.$::domain:32400",
#        proxy_buffering     => 'off',
#        proxy_redirect      => 'off',
#        proxy_http_version  => '1.1',
#        proxy_set_header    => [
#          'X-Forwarded-For $proxy_add_x_forwarded_for',
#          'Upgrade $http_upgrade',
#          'Connection $http_connection',
#          'X-Real-IP $remote_addr',
#          'Host $http_host',
#        ],
#        location_cfg_append => {
#    #      'if ($http_x_plex_device_name == "")' => '{rewrite ^/$ https://$http_host/web/index.html}',
#          'proxy_cookie_path' => '/web/ /',
#        },
#      },
#    },
#  }

lookup_options:
  "^letsencrypt::config$":
    merge: deep
    knockout_prefix: '--'
